#!/bin/sh

WEBROOT=$(pwd)

PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`"
BASE="`pwd -P`"
cd "$SAVED"

#BASE=$(readlink $0)
#if [ -z "$BASE" ]; then
#BASE=.
#else
#BASE=$(dirname $BASE)
#fi

CONFIG="{
  \"webRoot\": \"$WEBROOT\",
  \"staticFiles\": \"$BASE/static\",
  \"includes\": \"gwt\"
}"

export JAVA_OPTS="$JAVA_OPTS -Xmx2048M -XX:MaxPermSize=512M -XX:+CMSClassUnloadingEnabled -XX:-UseConcMarkSweepGC -XX:+PrintGCDetails -verbose:gc -Xloggc:/logs/gc.log"

# Make a temporary file and stash the config JSON
TMP_FILE=$(mktemp /tmp/collide.XXXXXXXXXX) || { echo "Failed to create temp file"; exit 1; }
echo $CONFIG >> $TMP_FILE

VERTX_MODS=$BASE/lib/vertx/mods

#TODO: Make the ant build generate this string.
COLLIDE_CLASSPATH=$BASE/lib/xapi-dev-0.6.jar:$BASE/lib/xapi-gwt-0.4.jar:$VERTX_MODS/gwt:$BASE/lib/collide-server.jar:$BASE/lib/gwt-dev.jar:$BASE/lib/gwt-user.jar:$BASE/lib/gwt-codeserver.jar:$BASE/lib/guava-12.0.jar:$BASE/lib/gson-2.2.1.jar:$BASE/lib/jsr305.jar:$BASE/lib/org.eclipse.jgit-1.3.0.201202151440-r.jar:$BASE/lib/waveinabox-import-0.3.jar:$BASE/lib/elemental.jar



# Launch the server, setting up the appropriate classpath and config files.
${BASE}/lib/vertx/bin/vertx run bootstrap.js -conf $TMP_FILE -cp $COLLIDE_CLASSPATH "$@"
