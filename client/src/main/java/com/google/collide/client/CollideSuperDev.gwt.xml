<module>
  <entry-point class="com.google.collide.client.Collide" />

  <source path=""/>

  <inherits name="com.google.gwt.user.User"/>
  <!-- <inherits name="com.google.gwt.dev.codeserver.hook" /> -->

  <inherits name="com.google.collide.client.Imports" />

  <!--
    Release Mode is either "debug" or "release", and will be so by a
    set-property rather than by a property provider.
  -->
  <define-property name="webide.release_mode" values="debug, release"/>
  <property-provider name="webide.release_mode"><![CDATA[
    if (location.search.match(/[?&]debug([=&].*)?$/)) {
      return "debug";
    } else {
      return "release";
    }
  ]]></property-provider>

  <!-- This provides deferred binding for the debugging API implementation. -->
  <set-configuration-property name='CssResource.style' value='stable' />

  <!-- Right now, just turn logging on.  We may want to revisit that later, but
       for now we're just debugging and we want fewer permutations.
    -->
  <set-property name="loglevel" value="debug"/>
  <extend-property name="locale" values="en_US"/>
  <set-property name="locale" value="en_US"/>
  <set-property-fallback name="locale" value="en_US"/>


  <!--
   The below settings are optimizations for development.
   Currently hardcoded to chrome+x11 (linux).

   Change to your preferred os and browser.
   Make sure to disable webide.debuggingMode=none if not using chrome
   -->

  <!-- Restrict the build to Chrome for development. -->
<!--   <set-property name="user.agent" value="safari,gecko1_8" /> -->
  <set-property name="user.agent" value="safari" />

  <!-- Set development os to x11 (linux).  other choices: macintosh, windows or other -->
  <set-property name="webide.clientOs" value="x11" />

  <!-- Prefer web debugging mode -->
  <set-property name="webide.debuggingApi" value="chrome" />

  <!-- This is a wavey thing we don't particularly want... yet. -->
  <set-property name="mobile.user.agent" value="not_mobile" />


  <replace-with
     class="collide.client.util.BrowserUtils.Chrome">
    <when-type-is
       class="collide.client.util.BrowserUtils"/>
    <when-property-is name="user.agent" value="safari"/>
  </replace-with>
  <replace-with
     class="collide.client.util.BrowserUtils.Firefox">
    <when-type-is
       class="collide.client.util.BrowserUtils"/>
    <when-property-is name="user.agent" value="gecko1_8"/>
  </replace-with>

  <replace-with
     class="com.google.collide.client.ClientConfig.DebugMode">
    <when-type-is
       class="com.google.collide.client.ClientConfig.DebugOrReleaseMode"/>
    <when-property-is name="webide.release_mode" value="debug"/>
  </replace-with>
  <replace-with
     class="com.google.collide.client.util.logging.LogConfig.Enabled">
    <when-type-is
       class="com.google.collide.client.util.logging.LogConfig"/>
    <when-property-is name="webide.release_mode" value="debug"/>
  </replace-with>

  <replace-with
     class="com.google.collide.client.ClientConfig.ReleaseMode">
    <when-type-is
       class="com.google.collide.client.ClientConfig.DebugOrReleaseMode"/>
    <when-property-is name="webide.release_mode" value="release"/>
  </replace-with>
  <replace-with
     class="com.google.collide.client.util.logging.LogConfig.Disabled">
    <when-type-is
       class="com.google.collide.client.util.logging.LogConfig"/>
    <when-property-is name="webide.release_mode" value="release"/>
  </replace-with>

  <!-- Single permutation settings for development.
  <set-property name="webide.debuggingApi" value="chrome"/>
  <set-property name="webide.clientOs" value="x11"/>
  <set-property name="webide.release_mode" value="debug"/>
  <set-property name="user.agent" value="safari" />
  -->


  <add-linker name="xsiframe"/>
  <set-configuration-property name="devModeRedirectEnabled" value="true"/>
  <set-configuration-property name="installScriptJs" value="com/google/gwt/core/ext/linker/impl/installScriptDirect.js"/>
  <set-configuration-property name="installCode" value="true"/>
  <set-configuration-property name="computeScriptBaseJs" value="com/google/gwt/dev/codeserver/computeScriptBase.js"/>

</module>
